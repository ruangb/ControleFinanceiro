@using ControleFinanceiro.CrossCutting.Utilities
@model ControleFinanceiro.WebSite.Models.ExpenseViewModel

@{
    ViewData["Title"] = $"Editar {ExpenseViewModel.ObjectName}";
}

<h4>Editar @ExpenseViewModel.ObjectName</h4>

<hr />
<div class="row">
    <div class="col-md-6 offset-md-3">
        <form asp-action="Edit" id="frmEdit" name="frmEdit" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input asp-for="Id" class="form-control" hidden />
            <div class="row">
                <div class="col-md-6">
                    <label asp-for="Status" class="control-label"></label>
                    <select asp-for="Status" asp-items="@ViewBag.Status" class="form-control">
                    </select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="OperationDate" class="control-label"></label>
                    <input asp-for="OperationDate" class="form-control" />
                    <span asp-validation-for="OperationDate" class="text-danger"></span>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    <label asp-for="Description" class="control-label"></label>
                    <input asp-for="Description" class="form-control" />
                    <span asp-validation-for="Description" class="text-danger"></span>
                </div>
            </div>

            <div class="row">
                <div class="col-md-3">
                    <label asp-for="Amount" class="control-label"></label>
                    <input asp-for="Amount" class="form-control" />
                    <span asp-validation-for="Amount" class="text-danger"></span>
                </div>
                <div class="col-md-5">
                    <label asp-for="ParcelQuantity" class="control-label"></label>
                    <input asp-for="ParcelQuantity" class="form-control" />
                    <span asp-validation-for="ParcelQuantity" class="text-danger"></span>
                </div>
            </div>
            <div class="row">
                <div class="col-md-6">
                    <label asp-for="IdPerson" class="control-label"></label>
                    <select asp-for="IdPerson" asp-items="@ViewBag.Persons" class="form-control"></select>
                    <span asp-validation-for="IdPerson" class="text-danger"></span>
                </div>
                <div class="col-md-6">
                    <label asp-for="IdCreditCard" class="control-label"></label>
                    <select asp-for="IdCreditCard" asp-items="@ViewBag.CreditCards" class="form-control"></select>
                    <span asp-validation-for="IdCreditCard" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group my-2">
                <input type="submit" value="Salvar" @* onclick="salvar()" *@ class="btn btn-success" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index" class="float-end">Voltar à lista</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script type="text/javascript">
    $(document).ready(function () {

        $.validator.methods.number = function (value, element, param) {
            debugger;
            var regex = /^-?(?:\d+|\d{1,3}(?:.\d{3})+)(?:(\,|.)\d+)?$/;
            return regex.test(value);
        }
    });

    function isValidDate(dateString) {
        // First check for the pattern
        if (!/^\d{1,2}\/\d{1,2}\/\d{4}$/.test(dateString))
            return false;

        // Parse the date parts to integers
        var parts = dateString.split("/");
        var day = parseInt(parts[1], 10);
        var month = parseInt(parts[0], 10);
        var year = parseInt(parts[2], 10);

        // Check the ranges of month and year
        if (year < 1000 || year > 3000 || month == 0 || month > 12)
            return false;

        var monthLength = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

        // Adjust for leap years
        if (year % 400 == 0 || (year % 100 != 0 && year % 4 == 0))
            monthLength[1] = 29;

        // Check the range of the day
        return day > 0 && day <= monthLength[month - 1];
    };

    function salvar() {
        $('frmEdit').validate({
            rules: {
                Status: {
                    required: true
                },
                Description: {
                    required: true,
                    minlength: 15
                },
                // name: {
                //     required: true,
                //     minlength: 2
                // }
            },
            messages: {
                Description: {
                    required: "A {0} é obrigatória",
                },
            },
            submitHandler: {
                function(form) {
                    form.submit(e => {
                        e.preventDefault();
                        console.log("Hello...");
                    })
                }
            }
        });

        var test = $('frmEdit').valid();
    }

</script>
